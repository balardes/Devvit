/**
 * #filter.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { FirehoseEvent } from '../../../options/options.js';
import { SubredditRating, SubredditType } from '../../../reddit/v2alpha/subredditv2.js';
export interface FirehoseFilterData {
    event: FirehoseEvent;
    subredditId: string;
    subredditRating: SubredditRating;
    post?: FirehoseFilterData_PostFilterData | undefined;
    comment?: FirehoseFilterData_CommentFilterData | undefined;
    subredditType: SubredditType;
}
/** The approval status for a post or comment */
export declare enum FirehoseFilterData_ApprovalStatus {
    UNKNOWN_APPROVAL_STATUS = 0,
    MOD_APPROVED = 1,
    MOD_REMOVED = 2,
    MOD_SPAMMED = 3,
    ADMIN_APPROVED = 4,
    ADMIN_REMOVED = 5,
    ADMIN_SPAMMED = 6,
    AUTHOR_REMOVED = 7,
    AUTHOR_SPAMMED = 8,
    UNRECOGNIZED = -1
}
export declare function firehoseFilterData_ApprovalStatusFromJSON(object: any): FirehoseFilterData_ApprovalStatus;
export declare function firehoseFilterData_ApprovalStatusToJSON(object: FirehoseFilterData_ApprovalStatus): number;
export interface FirehoseFilterData_SafetyTag {
    versions: {
        [key: string]: number;
    };
    score: number;
}
export interface FirehoseFilterData_SafetyTag_VersionsEntry {
    key: string;
    value: number;
}
export interface FirehoseFilterData_PostFilterData {
    adminTakedown: boolean;
    perspectiveScoresTitle: {
        [key: string]: number;
    };
    perspectiveScoresBody: {
        [key: string]: number;
    };
    safetyXTag?: FirehoseFilterData_SafetyTag | undefined;
    safetyVTag?: FirehoseFilterData_SafetyTag | undefined;
    approvalStatus: FirehoseFilterData_ApprovalStatus;
    /** custom value set by our own services */
    sexuallyExplicit: boolean;
    mediaIds: string[];
    languageCode: string;
}
export interface FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry {
    key: string;
    value: number;
}
export interface FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry {
    key: string;
    value: number;
}
export interface FirehoseFilterData_CommentFilterData {
    adminTakedown: boolean;
    abuseScore: number;
    perspectiveScores: {
        [key: string]: number;
    };
    approvalStatus: FirehoseFilterData_ApprovalStatus;
    safetyXTag?: FirehoseFilterData_SafetyTag | undefined;
    safetyVTag?: FirehoseFilterData_SafetyTag | undefined;
    /** custom value set by our own services */
    sexuallyExplicit: boolean;
    mediaIds: string[];
}
export interface FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry {
    key: string;
    value: number;
}
export declare const FirehoseFilterData: {
    $type: "devvit.data.api.v1alpha.FirehoseFilterData";
    encode(message: FirehoseFilterData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FirehoseFilterData;
    fromJSON(object: any): FirehoseFilterData;
    toJSON(message: FirehoseFilterData): unknown;
    create(base?: DeepPartial<FirehoseFilterData>): FirehoseFilterData;
    fromPartial(object: DeepPartial<FirehoseFilterData>): FirehoseFilterData;
};
export declare const FirehoseFilterData_SafetyTag: {
    $type: "devvit.data.api.v1alpha.FirehoseFilterData.SafetyTag";
    encode(message: FirehoseFilterData_SafetyTag, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FirehoseFilterData_SafetyTag;
    fromJSON(object: any): FirehoseFilterData_SafetyTag;
    toJSON(message: FirehoseFilterData_SafetyTag): unknown;
    create(base?: DeepPartial<FirehoseFilterData_SafetyTag>): FirehoseFilterData_SafetyTag;
    fromPartial(object: DeepPartial<FirehoseFilterData_SafetyTag>): FirehoseFilterData_SafetyTag;
};
export declare const FirehoseFilterData_SafetyTag_VersionsEntry: {
    $type: "devvit.data.api.v1alpha.FirehoseFilterData.SafetyTag.VersionsEntry";
    encode(message: FirehoseFilterData_SafetyTag_VersionsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FirehoseFilterData_SafetyTag_VersionsEntry;
    fromJSON(object: any): FirehoseFilterData_SafetyTag_VersionsEntry;
    toJSON(message: FirehoseFilterData_SafetyTag_VersionsEntry): unknown;
    create(base?: DeepPartial<FirehoseFilterData_SafetyTag_VersionsEntry>): FirehoseFilterData_SafetyTag_VersionsEntry;
    fromPartial(object: DeepPartial<FirehoseFilterData_SafetyTag_VersionsEntry>): FirehoseFilterData_SafetyTag_VersionsEntry;
};
export declare const FirehoseFilterData_PostFilterData: {
    $type: "devvit.data.api.v1alpha.FirehoseFilterData.PostFilterData";
    encode(message: FirehoseFilterData_PostFilterData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FirehoseFilterData_PostFilterData;
    fromJSON(object: any): FirehoseFilterData_PostFilterData;
    toJSON(message: FirehoseFilterData_PostFilterData): unknown;
    create(base?: DeepPartial<FirehoseFilterData_PostFilterData>): FirehoseFilterData_PostFilterData;
    fromPartial(object: DeepPartial<FirehoseFilterData_PostFilterData>): FirehoseFilterData_PostFilterData;
};
export declare const FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry: {
    $type: "devvit.data.api.v1alpha.FirehoseFilterData.PostFilterData.PerspectiveScoresTitleEntry";
    encode(message: FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry;
    fromJSON(object: any): FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry;
    toJSON(message: FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry): unknown;
    create(base?: DeepPartial<FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry>): FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry;
    fromPartial(object: DeepPartial<FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry>): FirehoseFilterData_PostFilterData_PerspectiveScoresTitleEntry;
};
export declare const FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry: {
    $type: "devvit.data.api.v1alpha.FirehoseFilterData.PostFilterData.PerspectiveScoresBodyEntry";
    encode(message: FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry;
    fromJSON(object: any): FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry;
    toJSON(message: FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry): unknown;
    create(base?: DeepPartial<FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry>): FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry;
    fromPartial(object: DeepPartial<FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry>): FirehoseFilterData_PostFilterData_PerspectiveScoresBodyEntry;
};
export declare const FirehoseFilterData_CommentFilterData: {
    $type: "devvit.data.api.v1alpha.FirehoseFilterData.CommentFilterData";
    encode(message: FirehoseFilterData_CommentFilterData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FirehoseFilterData_CommentFilterData;
    fromJSON(object: any): FirehoseFilterData_CommentFilterData;
    toJSON(message: FirehoseFilterData_CommentFilterData): unknown;
    create(base?: DeepPartial<FirehoseFilterData_CommentFilterData>): FirehoseFilterData_CommentFilterData;
    fromPartial(object: DeepPartial<FirehoseFilterData_CommentFilterData>): FirehoseFilterData_CommentFilterData;
};
export declare const FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry: {
    $type: "devvit.data.api.v1alpha.FirehoseFilterData.CommentFilterData.PerspectiveScoresEntry";
    encode(message: FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry;
    fromJSON(object: any): FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry;
    toJSON(message: FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry): unknown;
    create(base?: DeepPartial<FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry>): FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry;
    fromPartial(object: DeepPartial<FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry>): FirehoseFilterData_CommentFilterData_PerspectiveScoresEntry;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=filter.d.ts.map