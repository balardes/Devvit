/**
 * #app_info.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { ComputePool } from '../../app_version/info/app_version_info.js';
import { Redditor } from '../../reddit/redditor.js';
import { Categories } from '../categories/categories.js';
/** Contains the details of an app. For field documentation, refer to the Prisma schema. */
export interface AppInfo {
    id: string;
    slug: string;
    name: string;
    description: string;
    appAccount?: Redditor | undefined;
    isNsfw: boolean;
    isDelisted: boolean;
    isFirstParty: boolean;
    isArchived: boolean;
    createdAt?: Date | undefined;
    owner?: Redditor | undefined;
    categories: Categories[];
    stats?: AppStats | undefined;
    termsAndConditions: string;
    privacyPolicy: string;
    /** Last number is 15, app_account; next number is 16 */
    defaultPool: ComputePool;
}
export interface MultipleAppInfos {
    apps: AppInfo[];
}
/** Contains stats about an app. */
export interface AppStats {
    /** How many times/locations is this app currently installed in? */
    installCount: number;
}
export declare const AppInfo: {
    $type: "devvit.dev_portal.app.info.AppInfo";
    encode(message: AppInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppInfo;
    fromJSON(object: any): AppInfo;
    toJSON(message: AppInfo): unknown;
    create(base?: DeepPartial<AppInfo>): AppInfo;
    fromPartial(object: DeepPartial<AppInfo>): AppInfo;
};
export declare const MultipleAppInfos: {
    $type: "devvit.dev_portal.app.info.MultipleAppInfos";
    encode(message: MultipleAppInfos, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MultipleAppInfos;
    fromJSON(object: any): MultipleAppInfos;
    toJSON(message: MultipleAppInfos): unknown;
    create(base?: DeepPartial<MultipleAppInfos>): MultipleAppInfos;
    fromPartial(object: DeepPartial<MultipleAppInfos>): MultipleAppInfos;
};
export declare const AppStats: {
    $type: "devvit.dev_portal.app.info.AppStats";
    encode(message: AppStats, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AppStats;
    fromJSON(object: any): AppStats;
    toJSON(message: AppStats): unknown;
    create(base?: DeepPartial<AppStats>): AppStats;
    fromPartial(object: DeepPartial<AppStats>): AppStats;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=app_info.d.ts.map