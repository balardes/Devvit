syntax = "proto3";

package devvit.data.api.admin.v1alpha;

import "devvit/options/options.proto";
import "devvit/reddit/v2alpha/subredditv2.proto";

option go_package = "github.snooguts.net/reddit/reddit-devplatform-monorepo/go-common/generated/protos/types/devvit/data/api/admin/v1alpha";

message GetUISubscriptionsByOrganizationNameRequest {
  string organization_name = 1;
}

message GetUISubscriptionsByOrganizationNameResponse {
  message SubredditInfo {
    // t5_ subreddit ID
    // @example "t5_2qh1o"
    string id = 1;
    // Subreddit display name - not prefixed with r/
    // @example "aww"
    string name = 2;
    // Subreddit icon URL
    string icon = 3;
    // Whether the subreddit is NSFW
    bool is_nsfw = 4;
  }
  // Data subscription for UI consumption that includes hydrated subreddit info
  message Subscription {
    // Subscription ID
    string id = 1;
    // Subscription name
    string name = 2;
    // Subscription description
    string description = 3;
    // Firehose events types the subscription is subscribed to
    repeated devvit.options.FirehoseEvent events = 4;
    // Subreddits the subscription is subscribed to
    repeated SubredditInfo subreddits = 5;
    // Subreddit ratings the subscription is subscribed to
    repeated devvit.reddit.v2alpha.SubredditRating subreddit_ratings = 6;
  }

  repeated Subscription subscriptions = 1;
}

// This service augments the core Admin Service and exists to accomodate the
// more frequently changing UI requirements. Endpoints in this service should
// attempt to return appropriately hydrated items in order to minmize the the
// number of server calls needed to render a view (on initial load, at least)
service ROAdminUI {
  rpc GetSubscriptionsByOrganizationName(GetUISubscriptionsByOrganizationNameRequest) returns (GetUISubscriptionsByOrganizationNameResponse);
}
