import { Context, SettingsFormFieldValidatorEvent } from "@devvit/public-api";
/**
 * This function validates a custom date format string.
 * @param event Takes the Devvit string settings field validator object.
 * @param _context Takes the Devvit context object for compatability, but it's not used in this function.
 * @param errorMessage The error message to return if the validation fails, returns a default error message if not specified.
 * @returns The error message if the validation fails, or undefined if it passes.
 */
export declare function validateCustomDateformat(event: SettingsFormFieldValidatorEvent<string>, _context?: Context, errorMessage?: string): Promise<string | undefined>;
/**
 * This function validates a custom timezone string.
 * @param event Takes the Devvit string settings field validator object.
 * @param _context Takes the Devvit context object for compatability, but it's not used in this function.
 * @param errorMessage The error message to return if the validation fails, returns a default error message if not specified.
 * @returns The error message if the validation fails, or undefined if it passes.
 */
export declare function validateCustomTimezone(event: SettingsFormFieldValidatorEvent<string>, _context?: Context, errorMessage?: string): Promise<string | undefined>;
/**
 * This function validates a custom locale string.
 * @param event Takes the Devvit string settings field validator object.
 * @param _context Takes the Devvit context object for compatability, but it's not used in this function.
 * @param errorMessage The error message to return if the validation fails, returns a default error message if not specified.
 * @returns The error message if the validation fails, or undefined if it passes.
 */
export declare function validateCustomLocale(event: SettingsFormFieldValidatorEvent<string | string[]>, _context?: Context, errorMessage?: string): Promise<string | undefined>;
