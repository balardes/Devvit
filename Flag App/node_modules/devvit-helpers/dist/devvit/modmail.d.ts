import { ModMail } from "@devvit/protos";
import { ConversationData, GetConversationsRequest, MessageData, ModMailService } from "@devvit/public-api";
/**
 * Sort by:
 * - `recent` - Order by whenever anyone last updated the conversation, mod or participant
 * - `mod` - Order by the last time a mod updated the conversation
 * - `user` - Order by the last time a participant user updated the conversation
 * - `unread` - Order by the most recent unread message in the conversation for this mod
 */
export type ConversationSort = "recent" | "mod" | "user" | "unread";
/**
 * Gets the date that should be used for sorting a conversation based on the specified sort order.
 * @param conversation A conversation object
 * @param sort ModMail sort order to use
 * @param defaultDate Used if the relevant date is undefined
 * @returns The date to use for sorting this conversation
 */
export declare function getConversationSortDate(conversation: ConversationData, sort: ConversationSort, defaultDate?: string | number | Date): Date;
/**
 * This function compares two ConversationData objects based on the specified sort order.
 * @param a ConversationData object
 * @param b ConversationData object
 * @param sort ModMail sort order to use
 * @returns Negative if A is older than B, positive if A is newer than B, and 0 if they are the same
 */
export declare function compareConversations(a: ConversationData, b: ConversationData, sort: ConversationSort): number;
/**
 * This function returns the last conversation in an unsorted list of conversations based on the specified sort order.
 * @param conversations List of conversations
 * @param sort ModMail sort order to use
 * @returns The conversation that is the oldest based on the specified sort order or undefined if the list is empty
 */
export declare function getLastConversation(conversations: ConversationData[], sort: ConversationSort): ConversationData | undefined;
/**
 * This function sorts an array of conversations based on the specified sort order.
 * @param conversations
 * @param sort ModMail sort order to use
 * @returns Conversations sorted by the specified sort order, most recent first
 */
export declare function sortConversations(conversations: ConversationData[], sort: ConversationSort): ConversationData[];
/**
 * This function retrieves a list of modmail conversations based on the specified options.
 * Unlike the one built-in getConversations() function, this function is not limited to a maximum of 100 and will return a sorted list of conversations.
 * @param modmail Instance of the ModMailService, such as context.reddit.modMail
 * @param options Same options as the ones you would provide to context.reddit.modMail.getConversations()
 * @param options.subreddits Only return conversations from these subreddits
 * @param options.state Filter returned conversations by their state (defaults to all)
 * @param options.sort recent, mod, user, or unread (defaults to recent)
 * @param options.limit Maximum number of conversations to retrieve from 1 to Infinity (defaults to 100)
 * @param options.after Conversation ID to start after, ones before this will be excluded
 * @returns A list of sorted conversations' ConversationData
 */
export declare function getModmailConversations(modmail: ModMailService, options: GetConversationsRequest): Promise<ConversationData[]>;
export type ModmailConversationPermalink = `https://mod.reddit.com/mail/perma/${string}`;
export type ModmailMessagePermalink = `https://mod.reddit.com/mail/perma/${string}/${string}`;
/**
 * This function creates a permalink to a modmail conversation or message.
 * @param conversation Conversation ID as a string, a ConversationData object, or a ModMail event object
 * @param message Message ID, MessageData object, or undefined. If undefined, the permalink will point to the conversation, unless the conversation object is the ModMail event object
 * @returns Permalink to the conversation or message, or undefined if at least the conversation ID is not found
 */
export declare function getModmailPermalink(conversation: string | ConversationData | ModMail, message?: string | MessageData): ModmailConversationPermalink | ModmailMessagePermalink | undefined;
