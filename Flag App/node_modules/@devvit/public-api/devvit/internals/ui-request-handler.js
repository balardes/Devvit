import { CustomPostDefinition } from '@devvit/protos';
import { Devvit } from '../Devvit.js';
import { extendDevvitPrototype } from './helpers/extendDevvitPrototype.js';
import { BlocksHandler } from './blocks/handler/BlocksHandler.js';
/**
 * Extend me to add new surfaces to Devvit.
 */
const UIComponentBindings = [
    [
        CustomPostDefinition,
        CustomPostDefinition.methods['renderPostContent'],
        (_props, context) => Devvit.customPostType?.render(context) ?? null,
    ],
];
function makeHandler(component) {
    return async (req, metadata) => {
        const handler = new BlocksHandler(component);
        return handler.handle(req, metadata);
    };
}
export function registerUIRequestHandlers(config) {
    for (const [definition, method, component] of UIComponentBindings) {
        config.provides(definition);
        extendDevvitPrototype(method.name, makeHandler(component));
    }
}
