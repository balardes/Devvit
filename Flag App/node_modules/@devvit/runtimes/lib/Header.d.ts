import type { Metadata } from '@devvit/protos';
import { Header } from '@devvit/shared-types/Header.js';
import type { Namespace } from '../common/envelope/Namespace.js';
/** Returns true for any header starting with "devvit-". */
export declare function isSystemHeader(header: string): boolean;
export declare const allowlistedReadHeaders: readonly Header[];
/**
 * Return a new shallow copy of metadata with restricted headers filtered out.
 *
 * Don't care about the origin of the request. System destinations have access
 * to all headers regardless of the sender.
 */
export declare function filterHeadersForDestination(namespace: Readonly<Namespace>, metadata: Readonly<Metadata>, destination: string): Metadata;
export declare function isTrustedLocation(namespace: Readonly<Namespace>, location: string): boolean;
//# sourceMappingURL=Header.d.ts.map