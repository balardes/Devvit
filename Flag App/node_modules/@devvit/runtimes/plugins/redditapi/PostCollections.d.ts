import type { PostCollections as _PostCollections, AddPostToCollectionRequest, CollectionRequest, CreateCollectionRequest, DeleteCollectionRequest, FollowCollectionRequest, Metadata, RemovePostInCollectionRequest, ReorderCollectionRequest, SubredditCollectionsRequest, UpdateCollectionDescriptionRequest, UpdateCollectionDisplayLayoutRequest, UpdateCollectionTitleRequest } from '@devvit/protos';
import { CollectionResponse, Empty, SubredditCollectionsResponse } from '@devvit/protos';
import { RedditAPI } from './RedditAPI.js';
export declare class PostCollections extends RedditAPI implements _PostCollections {
    Collection(request: CollectionRequest, metadata: Metadata): Promise<CollectionResponse>;
    SubredditCollections(request: SubredditCollectionsRequest, metadata: Metadata): Promise<SubredditCollectionsResponse>;
    Create(request: CreateCollectionRequest, metadata: Metadata): Promise<CollectionResponse>;
    AddPost(request: AddPostToCollectionRequest, metadata: Metadata): Promise<Empty>;
    Delete(request: DeleteCollectionRequest, metadata: Metadata): Promise<Empty>;
    Follow(request: FollowCollectionRequest, metadata: Metadata): Promise<Empty>;
    RemovePost(request: RemovePostInCollectionRequest, metadata: Metadata): Promise<Empty>;
    Reorder(request: ReorderCollectionRequest, metadata: Metadata): Promise<Empty>;
    UpdateDescription(request: UpdateCollectionDescriptionRequest, metadata: Metadata): Promise<Empty>;
    UpdateDisplayLayout(request: UpdateCollectionDisplayLayoutRequest, metadata: Metadata): Promise<Empty>;
    UpdateTitle(request: UpdateCollectionTitleRequest, metadata: Metadata): Promise<Empty>;
}
//# sourceMappingURL=PostCollections.d.ts.map