/**
 * #ui.ts
 *
 * @packageDocumentation
 */
import _m0 from 'protobufjs/minimal.js';
import { AccessToken } from './auth.js';
import { Organization } from './organization.js';
import { Subscription } from './subscription.js';
export interface UIGetOrganizationsRequest {
}
export interface UIGetOrganizationsResponse {
    organizations: UIGetOrganizationsResponse_HydratedOrganization[];
}
export interface UIGetOrganizationsResponse_HydratedOrganization {
    organization?: Organization | undefined;
    subscriptions: Subscription[];
    acccessTokens: AccessToken[];
}
export declare const UIGetOrganizationsRequest: {
    $type: "devvit.data.api.admin.v1alpha.UIGetOrganizationsRequest";
    encode(_: UIGetOrganizationsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UIGetOrganizationsRequest;
    fromJSON(_: any): UIGetOrganizationsRequest;
    toJSON(_: UIGetOrganizationsRequest): unknown;
    create(base?: DeepPartial<UIGetOrganizationsRequest>): UIGetOrganizationsRequest;
    fromPartial(_: DeepPartial<UIGetOrganizationsRequest>): UIGetOrganizationsRequest;
};
export declare const UIGetOrganizationsResponse: {
    $type: "devvit.data.api.admin.v1alpha.UIGetOrganizationsResponse";
    encode(message: UIGetOrganizationsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UIGetOrganizationsResponse;
    fromJSON(object: any): UIGetOrganizationsResponse;
    toJSON(message: UIGetOrganizationsResponse): unknown;
    create(base?: DeepPartial<UIGetOrganizationsResponse>): UIGetOrganizationsResponse;
    fromPartial(object: DeepPartial<UIGetOrganizationsResponse>): UIGetOrganizationsResponse;
};
export declare const UIGetOrganizationsResponse_HydratedOrganization: {
    $type: "devvit.data.api.admin.v1alpha.UIGetOrganizationsResponse.HydratedOrganization";
    encode(message: UIGetOrganizationsResponse_HydratedOrganization, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UIGetOrganizationsResponse_HydratedOrganization;
    fromJSON(object: any): UIGetOrganizationsResponse_HydratedOrganization;
    toJSON(message: UIGetOrganizationsResponse_HydratedOrganization): unknown;
    create(base?: DeepPartial<UIGetOrganizationsResponse_HydratedOrganization>): UIGetOrganizationsResponse_HydratedOrganization;
    fromPartial(object: DeepPartial<UIGetOrganizationsResponse_HydratedOrganization>): UIGetOrganizationsResponse_HydratedOrganization;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=ui.d.ts.map